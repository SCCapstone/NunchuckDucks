type Workout @model @auth(rules: [{allow: public}]) {
  id: ID!
  workoutName: String
  exercises: [AWSJSON]
  userID: ID! @index(name: "byUser")
  username: String!
}

type Notification @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String!
  date: AWSDate
  content: String
  userID: ID! @index(name: "byUser")
  interactingUserUsername: String
}

type FollowedBy @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String!
  userID: ID! @index(name: "byUser")
}

type Follows @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String!
  userID: ID! @index(name: "byUser")
  lowerUsername: String
}

type Reaction @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String!
  reactionType: ReactionType!
  postID: ID! @index(name: "byPost")
}

enum ReactionType {
  LIKE
  LOVE
  FLEX
  CLAP
}

type Comment @model @auth(rules: [{allow: public}]) {
  id: ID!
  content: String!
  username: String!
  postID: ID! @index(name: "byPost")
  reply: ID
}

type Goal @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String!
  date: AWSDate
  content: String
  userID: ID! @index(name: "byUser")
  isCompleted: Boolean
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String!
  profilePicture: String
  bio: String
  Goals: [Goal] @hasMany(indexName: "byUser", fields: ["id"])
  Posts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  Follows: [Follows] @hasMany(indexName: "byUser", fields: ["id"])
  FollowedBies: [FollowedBy] @hasMany(indexName: "byUser", fields: ["id"])
  expoToken: String
  isPrivate: Boolean
  Notifications: [Notification] @hasMany(indexName: "byUser", fields: ["id"])
  currentStreak: Int
  Workouts: [Workout] @hasMany(indexName: "byUser", fields: ["id"])
  WeeklyGoal: Int
  lowerUsername: String
}

type Post @model @auth(rules: [{allow: public}]) {
  id: ID!
  caption: String!
  photo: String!
  username: String!
  Comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
  Reactions: [Reaction] @hasMany(indexName: "byPost", fields: ["id"])
  userID: ID! @index(name: "byUser")
  Workout: Workout @hasOne
}
 